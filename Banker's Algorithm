#include <stdio.h>
#include <stdbool.h>

#define MAX_RESOURCES 100
#define MAX_PROCESSES 100

int m;
int n; 
int available[MAX_RESOURCES];
int max[MAX_PROCESSES][MAX_RESOURCES];
int allocation[MAX_PROCESSES][MAX_RESOURCES];
int need[MAX_PROCESSES][MAX_RESOURCES];

bool isSafe() {
    int work[MAX_RESOURCES];
    bool finish[MAX_PROCESSES] = { false };
    int safeSequence[MAX_PROCESSES];
    int count = 0;

    
    for (int i = 0; i < m; i++)
        work[i] = available[i];

  
    while (count < n) {
        bool found = false;

        
        for (int i = 0; i < n; i++) {
            if (!finish[i]) {
                bool canExecute = true;
                for (int j = 0; j < m; j++) {
                    if (need[i][j] > work[j]) {
                        canExecute = false;
                        break;
                    }
                }

                if (canExecute) {
                    // Execute the process i
                    for (int j = 0; j < m; j++)
                        work[j] += allocation[i][j];

                    safeSequence[count++] = i;
                    finish[i] = true;

                    found = true;
                }
            }
        }

        if (!found) {
            printf("System is in an unsafe state.\n");
            return false;
        }
    }

    printf("System is in a safe state.\nSafe Sequence: ");
    for (int i = 0; i < n; i++) {
        printf("P%d", safeSequence[i]);
        if (i != n - 1)
            printf(" -> ");
    }
    printf("\n");

    return true;
}

int main() {
    printf("Enter the number of resource types (m): ");
    scanf("%d", &m);

    printf("Enter the number of processes (n): ");
    scanf("%d", &n);

    printf("Enter the available resources of each type:\n");
    for (int i = 0; i < m; i++)
        scanf("%d", &available[i]);

    printf("Enter the maximum demand matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &max[i][j]);

    printf("Enter the allocation matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++) {
            scanf("%d", &allocation[i][j]);
            need[i][j] = max[i][j] - allocation[i][j];
        }

    isSafe();

    return 0;
}
